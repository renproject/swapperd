# CircleCI config that utilises xgo
# Based off:
# https://github.com/billziss-gh/cgofuse/blob/9b5a7c093a2b5da9dc74494e4c7714af8c82de93/.circleci/config.yml
version: 2.1

_defaults: &defaults
    machine: true
    working_directory: ~/.go_workspace/src/github.com/renproject/swapperd
    environment:
      - GO111MODULE: on
      - GOPATH: /home/circleci/.go_workspace

commands:
  dep_ensure:
    description: Installing dependencies
    steps:
      - restore_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "go.sum" }}
          paths:
              - ~/.go_workspace/src/github.com/renproject/swapperd/vendor
      - run:
          name: Download dependencies
          command: |
            go version
            if [ ! -d ~/.go_workspace/src/github.com/renproject/swapperd/vendor ]; then
                go mod download
                go mod vendor
            else
                echo "Dependencies were restored from cache."
            fi
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "go.sum" }}
          paths:
              - ~/.go_workspace/src/github.com/renproject/swapperd/vendor

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Building Docker image
          command: |
            docker build -t karalabe/xgo-latest .
      - dep_ensure
      - run:
          name: Installing xgo
          command: |
            mkdir -p $GOPATH/src
            mkdir -p $GOPATH/bin
            go get -v github.com/karalabe/xgo
      - run:
          name: Build binaries
          command: |
            make
  test:
    docker:
      # specify the version
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/renproject/swapperd
    steps:
      - checkout
      - run:
          name: Running tests
          command: |
            go get -v -t -d ./adapter/...
            go get -v -t -d ./core/...
            go test -v ./adapter/...
            go test -v ./core/...


workflows:
  test_and_build:
    jobs:
      - test
      - build
#     - build:
#         requires:
#           - test
